% This file was created with JabRef 2.9.2.
% Encoding: UTF-8



@ONLINE{amd_sev_summarize,
  author = {Ustiukhin, Artemii },
  title = {{Exploring approaches for secure workload deployment and attestation in virtualization-based confidential computing environment}},
  url = {https://lutpub.lut.fi/handle/10024/164226},
  urldate = {2023-06-03}
}



@ARTICLE{feske07,
  author = {Norman Feske},
  title = {{A case study on the cost and benefit of dynamic RPC marshalling
	for low-level system components}},
  date = {2007},
  volume = {41},
  number = {4},
  pages = {40--48},
  issn = {0163-5980},
  doi = {http://doi.acm.org/10.1145/1278901.1278908},
  journal = {SIGOPS Operating Systems Review},
  location = {New York, NY, USA},
  publisher = {ACM}
}

@article{KRATZKE20171,
title = {Understanding cloud-native applications after 10 years of cloud computing - A systematic mapping study},
journal = {Journal of Systems and Software},
volume = {126},
pages = {1-16},
year = {2017},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2017.01.001},
url = {https://www.sciencedirect.com/science/article/pii/S0164121217300018},
author = {Nane Kratzke and Peter-Christian Quint},
keywords = {Cloud-native application, CNA, Systematic mapping study, Elastic platform, Microservice, Self service, Pattern, Softwareization},
abstract = {It is common sense that cloud-native applications (CNA) are intentionally designed for the cloud. Although this understanding can be broadly used it does not guide and explain what a cloud-native application exactly is. The term “cloud-native” was used quite frequently in birthday times of cloud computing (2006) which seems somehow obvious nowadays. But the term disappeared almost completely. Suddenly and in the last years the term is used again more and more frequently and shows increasing momentum. This paper summarizes the outcomes of a systematic mapping study analyzing research papers covering “cloud-native” topics, research questions and engineering methodologies. We summarize research focuses and trends dealing with cloud-native application engineering approaches. Furthermore, we provide a definition for the term “cloud-native application” which takes all findings, insights of analyzed publications and already existing and well-defined terminology into account.}
}

@ONLINE{k8s,
  author = {Kubernetes community},
  title = {{Kubernetes Documentation}},
  url = {https://kubernetes.io/docs/concepts/overview/},
  note = {Overview of Kubernetes},
  urldate = {2022-11-27}
}




@ONLINE{containerd,
  author = {containerd community},
  title = {{containerd website}},
  url = {https://containerd.io/},
  urldate = {2022-11-27}
}

@ONLINE{cri-o,
  author = {cri-o community},
  title = {{cri-o website}},
  url = {https://cri-o.io/},
  urldate = {2022-11-27}
}

@ONLINE{oci-runtime-spec,
  author = {oci community},
  title = {{Open Container Initiative Runtime Specification}},
  url = {https://github.com/opencontainers/runtime-spec/blob/main/spec.md},
  urldate = {2022-11-28}
}


@ONLINE{cri-interface,
  author = {k8s community},
  title = {{Introducing Container Runtime Interface (CRI) in Kubernetes}},
  url = {https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/},
  urldate = {2022-11-28}
}

@ONLINE{Runtime-Comparison,
  author = {Evan Baker, Senior Software Engineer, Critical Stack},
  title = {{A Comprehensive Container Runtime Comparison}},
  url = {https://www.capitalone.com/tech/cloud/container-runtime/},
  note = {Learn why runtimes are a key component of container management and how they make it easier to execute and deploy containers.},
  urldate = {2022-11-28}
}

@ONLINE{runc,
  author = {Open Container Initiative},
  title = {{Runc}},
  url = {https://github.com/opencontainers/runc},
  note = {runc is a CLI tool for spawning and running containers on Linux according to the OCI specification.},
  urldate = {2022-11-28}
}


@ONLINE{Kata-Containers,
  author = {Kata Containers community},
  title = {{Kata Containers}},
  url = {https://katacontainers.io/},
  urldate = {2022-11-28}
}

@ONLINE{Kata_arch,
  author = {Kata Containers community},
  title = {{Kata Containers Architecture}},
  url = {https://github.com/kata-containers/documentation/blob/master/design/architecture.md},
  urldate = {2022-11-28}
}



@INPROCEEDINGS{9198653,
  author={Kumar, Rakesh and Thangaraju, B},
  booktitle={2020 IEEE International Conference on Electronics, Computing and Communication Technologies (CONECCT)}, 
  title={Performance Analysis Between RunC and Kata Container Runtime}, 
  year={2020},
  volume={},
  number={},
  pages={1-4},
  doi={10.1109/CONECCT50063.2020.9198653}}

@ONLINE{quark,
  author = {Quark Containers community},
  title = {{Quark Containers}},
  url = {https://github.com/QuarkContainer/Quark},
  urldate = {2022-11-28}
}


@ONLINE{speed_secure_container_slogen,
  title = {{The Speed of Containers, the Security of VMs}},
  url = {https://katacontainers.io},
  urldate = {2022-12-01}
}


@ONLINE{quark_performance_report,
  title = {{Quark performance report}},
  url = {https://github.com/QuarkContainer/Quark/blob/main/doc/performance.pdf},
  urldate = {2022-12-01}
}

@misc{Hardware-supported-TEE,
  doi = {10.48550/ARXIV.2205.12742},
  url = {https://arxiv.org/abs/2205.12742},
  author = {Schneider, Moritz and Masti, Ramya Jayaram and Shinde, Shweta and Capkun, Srdjan and Perez, Ronald},
  keywords = {Cryptography and Security (cs.CR), Hardware Architecture (cs.AR), FOS: Computer and information sciences, FOS: Computer and information sciences},
  title = {SoK: Hardware-supported Trusted Execution Environments},
  publisher = {arXiv},
  year = {2022},
  copyright = {arXiv.org perpetual, non-exclusive license}
}

@INPROCEEDINGS{7345265,  
author={Sabt, Mohamed and Achemlal, Mohammed and Bouabdallah, Abdelmadjid},  
booktitle={2015 IEEE Trustcom/BigDataSE/ISPA},   
title={Trusted Execution Environment: What It is, and What It is Not},   
year={2015},  
volume={1},  
number={},  
pages={57-64},  
doi={10.1109/Trustcom.2015.357}
}

@inproceedings{101145,
author = {Mofrad, Saeid and Zhang, Fengwei and Lu, Shiyong and Shi, Weidong},
title = {A Comparison Study of Intel SGX and AMD Memory Encryption Technology},
year = {2018},
isbn = {9781450365000},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3214292.3214301},
doi = {10.1145/3214292.3214301},
abstract = {Hardware-assisted trusted execution environments are secure isolation technologies that have been engineered to serve as efficient defense mechanisms to provide a security boundary at the system level. Hardware vendors have introduced a variety of hardware-assisted trusted execution environments including ARM TrustZone, Intel Management Engine, and AMD Platform Security Processor. Recently, Intel Software Guard eXtensions (SGX) and AMD Memory Encryption Technology have been introduced. To the best of our knowledge, this paper presents the first comparison study between Intel SGX and AMD Memory Encryption Technology in terms of functionality, use scenarios, security, and performance implications. We summarize the pros and cons of these two approaches in comparison to each other.},
booktitle = {Proceedings of the 7th International Workshop on Hardware and Architectural Support for Security and Privacy},
articleno = {9},
numpages = {8},
keywords = {Intel SGX, hardware-supported security, AMD SEV},
location = {Los Angeles, California},
series = {HASP '18}
}


@ONLINE{INTEL_SGX,
  title = {{Intel® Software Guard Extensions }},
  url = {https://www.intel.com/content/www/us/en/developer/tools/software-guard-extensions/overview.html},
  urldate = {2022-12-10}
}


@inproceedings{Costan2016SanctumMH,
  title={Sanctum: Minimal Hardware Extensions for Strong Software Isolation},
  author={Victor Costan and Ilia A. Lebedev and Srinivas Devadas},
  booktitle={USENIX Security Symposium},
  year={2016}
}


@ONLINE{Execution_Environment_landscape,
  author = {TAxel Simon, Lily Sturmann},
  title = {{Current Trusted Execution Environment landscape}},
  date = {2019},
  url = {https://next.redhat.com/2019/12/02/current-trusted-execution-environment-landscape/},
  note = {Slide presentation at the WinHEC 2004},
  urldate = {2022-12-10}
}


@ARTICLE{10.3389/fcomp.2022.930741,
AUTHOR={Geppert, Tim and Deml, Stefan and Sturzenegger, David and Ebert, Nico},   
TITLE={Trusted Execution Environments: Applications and Organizational Challenges},      
JOURNAL={Frontiers in Computer Science},      
VOLUME={4},           
YEAR={2022},      
URL={https://www.frontiersin.org/articles/10.3389/fcomp.2022.930741},       
DOI={10.3389/fcomp.2022.930741},      
ISSN={2624-9898},   
ABSTRACT={A lack of trust in the providers is still a major barrier to cloud computing adoption – especially when sensitive data is involved. While current privacy-enhancing technologies, such as homomorphic encryption, can increase security, they come with a considerable performance overhead. As an alternative Trusted Executing Environment (TEE) provides trust guarantees for code execution in the cloud similar to transport layer security for data transport or advanced encryption standard algorithms for data storage. Cloud infrastructure providers like Amazon, Google, and Microsoft introduced TEEs as part of their infrastructure offerings. This review will shed light on the different technological options of TEEs, as well as give insight into organizational issues regarding their usage.}
}

@misc{cryptoeprint:2016/086,
      author = {Victor Costan and Srinivas Devadas},
      title = {Intel SGX Explained},
      howpublished = {Cryptology ePrint Archive, Paper 2016/086},
      year = {2016},
      note = {\url{https://eprint.iacr.org/2016/086}},
      url = {https://eprint.iacr.org/2016/086}
}

@inproceedings{10.1145/2487726.2488370,
author = {Hoekstra, Matthew and Lal, Reshma and Pappachan, Pradeep and Phegade, Vinay and Del Cuvillo, Juan},
title = {Using Innovative Instructions to Create Trustworthy Software Solutions},
year = {2013},
isbn = {9781450321181},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2487726.2488370},
doi = {10.1145/2487726.2488370},
abstract = {Software developers face a number of challenges when creating applications that attempt to keep important data confidential. Even with diligent attention paid to correct software design and implementation practices, secrets can still be exposed through a single flaw in any of the privileged code on the platform, code which may have been written by thousands of developers from hundreds of organizations throughout the world. Intel is developing innovative security technology which provides the ability for software developers to maintain control of the security of sensitive code and data by creating trusted domains within applications to protect critical information during execution and at rest. This paper will describe how this technology has been effectively used in lab exercises to protect private information in applications including enterprise rights management, video chat, trusted financial transactions, and others. Examples will include both protection of local processing and the establishment of secure communication with cloud services. It will illustrate useful software design patterns that can be followed to create many additional types of trusted software solutions.},
booktitle = {Proceedings of the 2nd International Workshop on Hardware and Architectural Support for Security and Privacy},
articleno = {11},
numpages = {1},
location = {Tel-Aviv, Israel},
series = {HASP '13}
}

@ONLINE{SGX_PAPER_LIST,
  title = {{SGX Paper List}},
  url = {https://github.com/vschiavoni/sgx-papers},
  note = {A curated list of system papers using/about Intel SGX},
  urldate = {2022-12-10}
}


@ONLINE{Intel_tdx_whitepaper,
  title = {{Intel® Trust Domain Extensions (Intel® TDX)}},
  url = {https://www.intel.com/content/www/us/en/developer/articles/technical/intel-trust-domain-extensions.html},
  urldate = {2022-12-10}
}



@ONLINE{Kate_support_tdx,
  title = {{New Kata Containers 3.0.0 release supports GPUs, Rust, Intel TDX and more}},
  url = {https://github.com/kata-containers/kata-containers/releases},
  urldate = {2022-12-10}
}

@ONLINE{Linux_support_tdx,
  title = {{Initial Intel TDX Enablement Positioned For Linux 5.19}},
  url = {https://www.phoronix.com/news/Intel-TDX-Linux-5.19},
  urldate = {2022-12-10}
}

@article{DBLP:journals/corr/abs-2303-15540,
  author       = {Pau{-}Chen Cheng and
                  Wojciech Ozga and
                  Enriquillo Valdez and
                  Salman Ahmed and
                  Zhongshu Gu and
                  Hani Jamjoom and
                  Hubertus Franke and
                  James Bottomley},
  title        = {Intel {TDX} Demystified: {A} Top-Down Approach},
  journal      = {CoRR},
  volume       = {abs/2303.15540},
  year         = {2023},
  url          = {https://doi.org/10.48550/arXiv.2303.15540},
  doi          = {10.48550/arXiv.2303.15540},
  eprinttype    = {arXiv},
  eprint       = {2303.15540},
  timestamp    = {Fri, 14 Apr 2023 17:38:15 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-2303-15540.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}


@ONLINE{Intel_EPID,
  title = {{Intel® Enhanced Privacy ID (EPID) Security Technology}},
  url = {https://www.intel.com/content/www/us/en/developer/articles/technical/intel-enhanced-privacy-id-epid-security-technology.html},
  urldate = {2022-12-10}
}

@ARTICLE{9448036,
  author={Sardar, Muhammad Usama and Musaev, Saidgani and Fetzer, Christof},
  journal={IEEE Access}, 
  title={Demystifying Attestation in Intel Trust Domain Extensions via Formal Verification}, 
  year={2021},
  volume={9},
  number={},
  pages={83067-83079},
  doi={10.1109/ACCESS.2021.3087421}}

  @article{Menetrey2022AnES,
  title={An Exploratory Study of Attestation Mechanisms for Trusted Execution Environments},
  author={James M'en'etrey and Christian Gottel and Marcelo Pasin and Pascal Felber and Valerio Schiavoni},
  journal={ArXiv},
  year={2022},
  volume={abs/2204.06790}
}


@ONLINE{sev,
  title = {{AMD MEMORY ENCRYPTION}},
  url = {https://amd.wpenginepowered.com/wordpress/media/2013/12/AMD_Memory_Encryption_Whitepaper_v9-Public.pdf},
  urldate = {2022-12-10}
}

@ONLINE{sev_es,
  title = {{PROTECTING VM REGISTER STATE WITH SEV-ES}},
  url = {https://www.amd.com/system/files/TechDocs/Protecting%20VM%20Register%20State%20with%20SEV-ES.pdf},
  urldate = {2022-12-10}
}




@ONLINE{SEV_SNP_white_book,
  title = {{AMD SEV-SNP: Strengthening VM Isolation with Integrity Protection and More}},
  url = {https://www.amd.com/system/files/techdocs/sev-snp-strengthening-vm-isolation-with-integrity-protection-and-more.pdf},
  urldate = {2022-12-10}
}

@ONLINE{snp_kdc,
  title = {{Versioned Chip Endorsement Key (VCEK) Certificate and KDS Interface Specification}},
  url = {https://www.amd.com/system/files/TechDocs/57230.pdf},
  urldate = {2022-12-10}
}

@ONLINE{snp_firmware,
  title = {{SEV Secure Nested Paging Firmware ABI Specification}},
  url = {https://www.amd.com/system/files/TechDocs/56860.pdf},
  urldate = {2022-12-10}
}


@ARTICLE{file_system_shield,
AUTHOR={Franz Gregor},   
TITLE={DEPLOYMENT MECHANISMS FOR SECURE ENCLAVES},               
YEAR={2016},
}


@ONLINE{Man_in_the_middle_attack,
  title = {{Man in the middle attack}},
  url = {https://www.ai.rug.nl/mas/finishedprojects/2011/TLS/hermsencomputerservices.nl/mas/mitm.html},
  urldate = {2023-6-10}
}


@ARTICLE{network_shiled,
AUTHOR={Nikolaus Th¨umme},   
TITLE={Implementation, Integration and Performance Evaluation of a TLSShielding layer for SCONE in the context of PALÆMON},             
YEAR={2019},
}

@INPROCEEDINGS{7163050,
  author={Liu, Fangfei and Yarom, Yuval and Ge, Qian and Heiser, Gernot and Lee, Ruby B.},
  booktitle={2015 IEEE Symposium on Security and Privacy}, 
  title={Last-Level Cache Side-Channel Attacks are Practical}, 
  year={2015},
  volume={},
  number={},
  pages={605-622},
  doi={10.1109/SP.2015.43}}


  @inproceedings {217454,
author = {Ben Gras and Kaveh Razavi and Herbert Bos and Cristiano Giuffrida},
title = {Translation Leak-aside Buffer: Defeating Cache Side-channel Protections with {TLB} Attacks},
booktitle = {27th USENIX Security Symposium (USENIX Security 18)},
year = {2018},
isbn = {978-1-939133-04-5},
address = {Baltimore, MD},
pages = {955--972},
url = {https://www.usenix.org/conference/usenixsecurity18/presentation/gras},
publisher = {USENIX Association},
month = aug,
}


@inproceedings {236278,
author = {Mengyuan Li and Yinqian Zhang and Zhiqiang Lin and Yan Solihin},
title = {Exploiting Unprotected {I/O} Operations in {AMD{\textquoteright}s} Secure Encrypted Virtualization},
booktitle = {28th USENIX Security Symposium (USENIX Security 19)},
year = {2019},
isbn = {978-1-939133-06-9},
address = {Santa Clara, CA},
pages = {1257--1272},
url = {https://www.usenix.org/conference/usenixsecurity19/presentation/li-mengyuan},
publisher = {USENIX Association},
month = aug,
}


@inproceedings {274707,
author = {Mengyuan Li and Yinqian Zhang and Huibo Wang and Kang Li and Yueqiang Cheng},
title = {{CIPHERLEAKS}: Breaking Constant-time Cryptography on {AMD} {SEV} via the Ciphertext Side Channel},
booktitle = {30th USENIX Security Symposium (USENIX Security 21)},
year = {2021},
isbn = {978-1-939133-24-3},
pages = {717--732},
url = {https://www.usenix.org/conference/usenixsecurity21/presentation/li-mengyuan},
publisher = {USENIX Association},
month = aug,
}


@ONLINE{Qaurk_Demo_for_qualitativ,
  title = {{Qaurk Demo repository qualitativ evaluation branch}},
  url = {https://github.com/yaoxin1995/Quark-demo/tree/evaluation_qualitativ},
  urldate = {2023-6-10}
}


@ONLINE{confidentail_quark_yaml,
  title = {{confidentail quark yaml}},
  url = {https://github.com/yaoxin1995/Quark-demo/blob/evaluation_qualitativ/confidentail_quark.yaml},
  urldate = {2023-6-10}
}

@ONLINE{k8s_secret_yaml,
  title = {{k8s secret yaml}},
  url = {https://github.com/yaoxin1995/Quark-demo/blob/evaluation_qualitativ/mongo-secret.yaml},
  urldate = {2023-6-10}
}

@ONLINE{vanilla_quark_deploy_for_qualitativ_yaml,
  title = {{vanilla quark deployment yaml}},
  url = {https://github.com/yaoxin1995/Quark-demo/blob/evaluation_qualitativ/vanilla_quark.yaml},
  urldate = {2023-6-10}
}


@ONLINE{enclave_policy,
  title = {{enclave policy}},
  url = {https://github.com/yaoxin1995/Quark-demo/blob/evaluation_qualitativ/policy.json},
  urldate = {2023-6-10}
}




@ONLINE{qualitativ_baseline,
  title = {{vanilla quark used for qualitativ analyse}},
  url = {https://github.com/yaoxin1995/master-thesis-quark/tree/qualitative-analyse-baseline},
  urldate = {2023-6-10}
}



@ONLINE{qualitativ_confidentail_quark,
  title = {{confidentail quark used for qualitativ analyse}},
  url = {https://github.com/yaoxin1995/master-thesis-quark/tree/working},
  urldate = {2023-6-10}
}

@ONLINE{qualitativ_workload,
  title = {{application used for qualitativ analyse}},
  url = {https://github.com/yaoxin1995/Quark-demo/blob/evaluation_qualitativ/quarlitative-analyse/src/main.rs#L10},
  urldate = {2023-6-10}
}



@ONLINE{kubectl,
  title = {{Command line tool (kubectl)}},
  url = {https://kubernetes.io/docs/reference/kubectl/},
  urldate = {2023-6-10}
}

@ONLINE{redis,
  title = {{Redis- The open source, in-memory data store}},
  url = {https://redis.io/},
  urldate = {2023-6-10}
}



@ONLINE{nginx,
  title = {{Nginx- an open source software for web serving, reverse proxying, caching, load balancing, media streaming, and more}},
  url = {https://www.nginx.com/},
  urldate = {2023-6-10}
}

@ONLINE{Redis_benchmark,
  title = {Redis benchmark},
  url = {https://redis.io/docs/management/optimization/benchmarks/},
  urldate = {2023-6-10}
}


@ONLINE{ab,
  title = {ab - Apache HTTP server benchmarking tool},
  url = {https://httpd.apache.org/docs/2.4/programs/ab.html},
  urldate = {2023-6-10}
}

@ONLINE{confidential_kata,
  title = {Confidential Containers - an open source community working to enable cloud native confidential computing by leveraging Trusted Execution Environments to protect containers and data.},
  url = {https://github.com/confidential-containers},
  urldate = {2023-6-10}
}


@ONLINE{clock_gettime,
  title = {clock\_gettime -Linux man page},
  url = {https://linux.die.net/man/3/clock_gettime},
  urldate = {2023-6-10}
}



@ONLINE{benchamark_framework,
  title = {benchamark\_framework for confidentail quark},
  url = {https://github.com/yaoxin1995/confidentail-quark-benchmart/tree/work-now},
  urldate = {2023-6-10}
}


@ONLINE{benchamark_Attestation_Report_Syscall,
  title = {benchamark\_Attestation\_Report\_Syscall},
  url = {https://github.com/yaoxin1995/k8s_script/commit/ab08f3e96baa80337165a83c7f44e75dce96d9af},
  urldate = {2023-6-10}
}


@ONLINE{benchamark_systemcall_intercetion,
  title = {benchamark\_systemcall\_intercetion},
  url = {https://github.com/yaoxin1995/k8s_script/commit/a4c78e33dd2d959a2d078341b0b62e80eceb372f},
  urldate = {2023-6-10}
}


@ONLINE{benchamark_filebase_secret,
  title = {benchamark\_filebase\_secret},
  url = {https://github.com/yaoxin1995/k8s_script/blob/file-based-secret/test_get_report_syscall/src/main.rs#L68},
  urldate = {2023-6-10}
}



@ONLINE{benchamark_perf_kubectl,
  title = {benchamark\_perf\_kubectl},
  url = {https://github.com/yaoxin1995/confidentail-quark-benchmart/commit/02094a1be4fbee0e22f5c8960f125ee6cfd5f41d},
  urldate = {2023-6-10}
}



@ONLINE{benchamark_micro,
  title = {benchamark\_micro},
  url = {https://github.com/yaoxin1995/k8s_script/blob/qualitative-any/micro_benchmark/main.c#L28},
  urldate = {2023-6-10}
}





@ONLINE{strip,
  title = {strip(1) - Linux man page},
  url = {https://linux.die.net/man/1/strip},
  urldate = {2023-6-10}
}




@ONLINE{kata_agent,
  title = {kata agent},
  url = {https://github.com/kata-containers/agent},
  urldate = {2023-6-10}
}


@ONLINE{ovmf,
  title = {ovmf},
  url = {http://www.linux-kvm.org/downloads/lersek/ovmf-whitepaper-c770f8c.txt},
  urldate = {2023-6-10}
}



@ONLINE{OWASP_Threat_Modeling,
  title = {OWASP Threat Modeling},
  url = {https://owasp.org/www-community/Threat_Modeling},
  urldate = {2023-6-10}
}



@ONLINE{DOS_ATTACK,
  title = {Denial of service attack},
  url = {https://en.wikipedia.org/wiki/Denial-of-service_attack},
  urldate = {2023-6-10}
}




@ONLINE{seccomp,
  title = {seccomp},
  url = {https://man7.org/linux/man-pages/man2/seccomp.2.html},
  urldate = {2023-6-10}
}


@article{DBLP:journals/corr/WuGLD16,
  author       = {Daoyuan Wu and
                  Debin Gao and
                  Yingjiu Li and
                  Robert H. Deng},
  title        = {SecComp: Towards Practically Defending Against Component Hijacking
                  in Android Applications},
  journal      = {CoRR},
  volume       = {abs/1609.03322},
  year         = {2016},
  url          = {http://arxiv.org/abs/1609.03322},
  eprinttype    = {arXiv},
  eprint       = {1609.03322},
  timestamp    = {Mon, 13 Aug 2018 16:46:57 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/WuGLD16.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}


@ONLINE{shim_v2,
  title = {containerd shim v2 api},
  url = {https://github.com/containerd/containerd/blob/main/runtime/v2/README.md},
  urldate = {2023-6-10}
}

@ONLINE{cri0_shim_v2,
  title = {CRI-O adopts the containerd shin v2 API},
  url = {https://github.com/cri-o/cri-o/issues/1945},
  urldate = {2023-6-10}
}


@ONLINE{amd_Sev_snp_ppt,
  title = {AMD SEV-SNP Attestation: Establishing Trust in Guests},
  url = {https://www.amd.com/content/dam/amd/en/documents/developer/lss-snp-attestation.pdf},
  urldate = {2023-6-10}
}



@ONLINE{kbs_Attestation_protocol,
  title = {KBS Attestation Protocol},
  url = {https://github.com/confidential-containers/kbs/blob/main/docs/kbs_attestation_protocol.md#authentication},
  urldate = {2023-6-10}
}


@ONLINE{aes_gcm,
  title = {Galois/Counter Mode},
  url = {https://de.wikipedia.org/wiki/Galois/Counter_Mode},
  urldate = {2023-6-10}
}


@ONLINE{exec_semantics,
  title = {Exec semantics},
  url = {https://github.com/opencontainers/runtime-spec/issues/345},
  urldate = {2023-6-10}
}




@ONLINE{exec_proposal,
  title = {Exec proposal},
  url = {https://github.com/duglin/runtime-spec/blob/7117ede74b31ade43d93a82f25a1cc78cb1b7353/runtime.md},
  urldate = {2023-6-10}
}


@ONLINE{Understanding_sdin,
  title = {Understanding stdin: true tty: true on a kubernetes container},
  url = {https://stackoverflow.com/questions/65915849/understanding-stdin-true-tty-true-on-a-kubernetes-container},
  urldate = {2023-6-10}
}


@ONLINE{theis_source_code,
  title = {Thesis source code},
  url = {https://github.com/yaoxin1995/master-thesis-quark},
  urldate = {2023-6-10}
}


@ONLINE{secret_uploading_script,
  title = {The script for secret uploading},
  url = {https://github.com/yaoxin1995/Quark-demo/blob/main/install_secrets.sh},
  urldate = {2023-6-10}
}


@ONLINE{embede_tls,
  title = {Embedded-TLS},
  url = {https://github.com/yaoxin1995/embedded-tls},
  urldate = {2023-6-10}
}


@ONLINE{tls_record_size,
  title = {Transport Layer Security (TLS)},
  url = {https://hpbn.co/transport-layer-security-tls/#:~:text=Maximum%20TLS%20record%20size%20is,entire%20record%20must%20be%20available},
  urldate = {2023-6-10}
}



@article{10.1145/2499368.2451167,
author = {Madhavapeddy, Anil and Mortier, Richard and Rotsos, Charalampos and Scott, David and Singh, Balraj and Gazagnaire, Thomas and Smith, Steven and Hand, Steven and Crowcroft, Jon},
title = {Unikernels: Library Operating Systems for the Cloud},
year = {2013},
issue_date = {April 2013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {48},
number = {4},
issn = {0362-1340},
url = {https://doi.org/10.1145/2499368.2451167},
doi = {10.1145/2499368.2451167},
abstract = {We present unikernels, a new approach to deploying cloud services via applications written in high-level source code. Unikernels are single-purpose appliances that are compile-time specialised into standalone kernels, and sealed against modification when deployed to a cloud platform. In return they offer significant reduction in image sizes, improved efficiency and security, and should reduce operational costs. Our Mirage prototype compiles OCaml code into unikernels that run on commodity clouds and offer an order of magnitude reduction in code size without significant performance penalty. The architecture combines static type-safety with a single address-space layout that can be made immutable via a hypervisor extension. Mirage contributes a suite of type-safe protocol libraries, and our results demonstrate that the hypervisor is a platform that overcomes the hardware compatibility issues that have made past library operating systems impractical to deploy in the real-world.},
journal = {SIGPLAN Not.},
month = {mar},
pages = {461–472},
numpages = {12},
keywords = {functional programming, hypervisor, microkernel}
}


@article{10.1145/3436512,
author = {Zhang, Yiming and Zhang, Chengfei and Wang, Yaozheng and Yu, Kai and Xue, Guangtao and Crowcroft, Jon},
title = {KylinX: Simplified Virtualization Architecture for Specialized Virtual Appliances with Strong Isolation},
year = {2021},
issue_date = {November 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {37},
number = {1–4},
issn = {0734-2071},
url = {https://doi.org/10.1145/3436512},
doi = {10.1145/3436512},
abstract = {Unikernel specializes a minimalistic LibOS and a target application into a standalone single-purpose virtual machine (VM) running on a hypervisor, which is referred to as (virtual) appliance. Compared to traditional VMs, Unikernel appliances have smaller memory footprint and lower overhead while guaranteeing the same level of isolation. On the downside, Unikernel strips off the process abstraction from its monolithic appliance and thus sacrifices flexibility, efficiency, and applicability.In this article, we examine whether there is a balance embracing the best of both Unikernel appliances (strong isolation) and processes (high flexibility/efficiency). We present KylinX, a dynamic library operating system for simplified and efficient cloud virtualization by providing the pVM (process-like VM) abstraction. A pVM takes the hypervisor as an OS and the Unikernel appliance as a process allowing both page-level and library-level dynamic mapping. At the page level, KylinX supports pVM fork plus a set of API for inter-pVM communication (IpC, which is compatible with conventional UNIX IPC). At the library level, KylinX supports shared libraries to be linked to a Unikernel appliance at runtime. KylinX enforces mapping restrictions against potential threats. We implement a prototype of KylinX by modifying MiniOS and Xen tools. Extensive experimental results show that KylinX achieves similar performance both in micro benchmarks (fork, IpC, library update, etc.) and in applications (Redis, web server, and DNS server) compared to conventional processes, while retaining the strong isolation benefit of VMs/Unikernels.},
journal = {ACM Trans. Comput. Syst.},
month = {feb},
articleno = {2},
numpages = {27},
keywords = {virtual appliances, Unikernel, Virtualization architecture, process-like VM (pVM)}
}


@inproceedings{10.1145/3267809.3267845,
author = {Williams, Dan and Koller, Ricardo and Lucina, Martin and Prakash, Nikhil},
title = {Unikernels as Processes},
year = {2018},
isbn = {9781450360111},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3267809.3267845},
doi = {10.1145/3267809.3267845},
abstract = {System virtualization (e.g., the virtual machine abstraction) has been established as the de facto standard form of isolation in multi-tenant clouds. More recently, unikernels have emerged as a way to reuse VM isolation while also being lightweight by eliminating the general purpose OS (e.g., Linux) from the VM. Instead, unikernels directly run the application (linked with a library OS) on the virtual hardware. In this paper, we show that unikernels do not actually require a virtual hardware abstraction, but can achieve similar levels of isolation when running as processes by leveraging existing kernel system call whitelisting mechanisms. Moreover, we show that running unikernels as processes reduces hardware requirements, enables the use of standard process debugging and management tooling, and improves the already impressive performance that unikernels exhibit.},
booktitle = {Proceedings of the ACM Symposium on Cloud Computing},
pages = {199–211},
numpages = {13},
keywords = {virtualization, unikernels, security, cloud computing},
location = {Carlsbad, CA, USA},
series = {SoCC '18}
}


@ONLINE{future_container,
  title = {The Future of Containers – What’s Next?},
  url = {https://mobycast.fm/the-future-of-containers-whats-next/},
  urldate = {2023-6-10}
}



@ONLINE{gvisor,
  title = {gbisor: The Container Security Platform},
  url = {https://gvisor.dev/},
  urldate = {2023-6-10}
}

@inproceedings{Johnson2023ParmaCC,
  title={Parma: Confidential Containers via Attested Execution Policies},
  author={Matthew A. Johnson and Stavros Volos and Ken Gordon and Sean T. Allen and Christoph M. Wintersteiger and Sylvan Clebsch and John Starks and Manuel Costa},
  year={2023}
}

@ONLINE{kata_api_restriction,
  title = {Restricting Kata Agent API},
  url = {https://medium.com/kata-containers/restricting-kata-agent-api-e3dc88bf8270},
  urldate = {2023-6-10}
}


@ONLINE{Constellation,
  title = {Constellation: The world's most secure Kubernetes},
  url = {https://www.edgeless.systems/products/constellation/},
  urldate = {2023-6-10}
}


@ONLINE{Constellation_Always_encrypted,
  title = {Always-encrypted, confidential Kubernetes with Constellation by Edgeless Systems},
  url = {https://www.youtube.com/watch?v=HvFCWRlXVO4&t=364s},
  urldate = {2023-6-10}
}


 @ONLINE{Nabla,
  title = {Nabla containers: a new approach to container isolation},
  url = {https://nabla-containers.github.io/},
  urldate = {2023-6-10}
}


@inproceedings{10.5555/3026877.3026930,
author = {Arnautov, Sergei and Trach, Bohdan and Gregor, Franz and Knauth, Thomas and Martin, Andre and Priebe, Christian and Lind, Joshua and Muthukumaran, Divya and O'Keeffe, Dan and Stillwell, Mark L. and Goltzsche, David and Eyers, David and Kapitza, R\"{u}diger and Pietzuch, Peter and Fetzer, Christof},
title = {SCONE: Secure Linux Containers with Intel SGX},
year = {2016},
isbn = {9781931971331},
publisher = {USENIX Association},
address = {USA},
abstract = {In multi-tenant environments, Linux containers managed by Docker or Kubernetes have a lower resource footprint, faster startup times, and higher I/O performance compared to virtual machines (VMs) on hypervisors. Yet their weaker isolation guarantees, enforced through software kernel mechanisms, make it easier for attackers to compromise the confidentiality and integrity of application data within containers.We describe SCONE, a secure container mechanism for Docker that uses the SGX trusted execution support of Intel CPUs to protect container processes from outside attacks. The design of SCONE leads to (i) a small trusted computing base (TCB) and (ii) a low performance overhead: SCONE offers a secure C standard library interface that transparently encrypts/decrypts I/O data; to reduce the performance impact of thread synchronization and system calls within SGX enclaves, SCONE supports user-level threading and asynchronous system calls. Our evaluation shows that it protects unmodified applications with SGX, achieving 0.6\texttimes{}-1.2\texttimes{} of native throughput.},
booktitle = {Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation},
pages = {689–703},
numpages = {15},
location = {Savannah, GA, USA},
series = {OSDI'16}
}



@ONLINE{Constellation_Encrypted_Kubernetes,
  title = {"Constellation: Encrypted Kubernetes" by Moritz Eckert – Talk 2/3 at CNC CH Meetup, May 25th 2023},
  url = {https://www.youtube.com/watch?v=zAYvrlJ7Q_w},
  urldate = {2023-6-10}
}

@ONLINE{confidentail_kata_storage,
  title = {[RFC] Trusted storage proposal for CoCo},
  url = {https://github.com/confidential-containers/documentation/issues/39},
  urldate = {2023-6-10}
}


@ONLINE{artifacts_quarlitative,
  title = {Artifacts for demo in the quantitative analysis},
  url = {https://github.com/yaoxin1995/Quark-demo/commit/de6f1f07a957c3eada7ba952487349ce32bee599},
  urldate = {2023-7-10}
}

@ONLINE{artifacts_busybox,
  title = {YAML for deploying busybox cquark},
  url = {https://github.com/yaoxin1995/Quark-demo/commit/a5dc46464114fcf88965e4e9cbadfd1174da7d34},
  urldate = {2023-7-10}
}




@ONLINE{perf_test_repo,
  title = {YAML files for performance tests},
  url = {https://github.com/yaoxin1995/Quark-demo/tree/evaluation_qualitativ/attifacts_for_performance_evaluation},
  urldate = {2023-7-10}
}



@INPROCEEDINGS{8031522,
  author={Shahzadi, Sonia and Iqbal, Muddesar and Qayyum, Zia Ul and Dagiuklas, Tasos},
  booktitle={2017 IEEE 22nd International Workshop on Computer Aided Modeling and Design of Communication Links and Networks (CAMAD)}, 
  title={Infrastructure as a service (IaaS): A comparative performance analysis of open-source cloud platforms}, 
  year={2017},
  volume={},
  number={},
  pages={1-6},
  doi={10.1109/CAMAD.2017.8031522}}



@article{10.1145/2767181,
author = {Huang, Wei and Ganjali, Afshar and Kim, Beom Heyn and Oh, Sukwon and Lie, David},
title = {The State of Public Infrastructure-as-a-Service Cloud Security},
year = {2015},
issue_date = {July 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {47},
number = {4},
issn = {0360-0300},
url = {https://doi.org/10.1145/2767181},
doi = {10.1145/2767181},
abstract = {The public Infrastructure-as-a-Service (IaaS) cloud industry has reached a critical mass in the past few years, with many cloud service providers fielding competing services. Despite the competition, we find some of the security mechanisms offered by the services to be similar, indicating that the cloud industry has established a number of “best-practices,” while other security mechanisms vary widely, indicating that there is also still room for innovation and experimentation. We investigate these differences and possible underlying reasons for it. We also contrast the security mechanisms offered by public IaaS cloud offerings and with security mechanisms proposed by academia over the same period. Finally, we speculate on how industry and academia might work together to solve the pressing security problems in public IaaS clouds going forward.},
journal = {ACM Comput. Surv.},
month = {jun},
articleno = {68},
numpages = {31},
keywords = {Public Infrastructure-as-a-Service Cloud}
}

@ONLINE{Azure_container,
  title = {Azure Container Instances: Microsoft Azure.},
  url = {https://azure.microsoft.com/en-gb/products/container-instances/},
  urldate = {2023-7-20}
}



@ONLINE{Amazon_container,
  title = {Docker on Amazon Web Services},
  url = {https://aws.amazon.com/getting-started/hands-on/deploy-docker-containers/},
  urldate = {2023-7-20}
}



@ONLINE{google_container,
  title = {Google Cloud Run.},
  url = {https://cloud.google.com/run},
  urldate = {2023-7-20}
}


@article{Shirinbab2020PerformanceEO,
  title={Performance evaluation of containers and virtual machines when running Cassandra workload concurrently},
  author={Sogand Shirinbab and Lars Lundberg and Emiliano Casalicchio},
  journal={Concurr. Comput. Pract. Exp.},
  year={2020},
  volume={32}
}


@ONLINE{container_vs_vm,
  title = {Containers vs. Virtual Machines (VMs): What's the Difference},
  url = {https://www.netapp.com/blog/containers-vs-vms/},
  urldate = {2023-7-20}
}



@inproceedings {280904,
author = {Xupeng Li and Xuheng Li and Christoffer Dall and Ronghui Gu and Jason Nieh and Yousuf Sait and Gareth Stockwell},
title = {Design and Verification of the Arm Confidential Compute Architecture},
booktitle = {16th USENIX Symposium on Operating Systems Design and Implementation (OSDI 22)},
year = {2022},
isbn = {978-1-939133-28-1},
address = {Carlsbad, CA},
pages = {465--484},
url = {https://www.usenix.org/conference/osdi22/presentation/li},
publisher = {USENIX Association},
month = jul,
}


@ONLINE{glibc,
  title = {The GNU C Library (glibc)},
  url = {https://www.gnu.org/software/libc/},
  urldate = {2023-7-20}
}
@inproceedings{Hoekstra2013UsingII,
  title={Using innovative instructions to create trustworthy software solutions},
  author={Matthew Hoekstra and Reshma Lal and Pradeep Pappachan and Vinay Phegade and Juan del Cuvillo},
  booktitle={Hardware and Architectural Support for Security and Privacy},
  year={2013}
}


@ONLINE{docker,
  title = {Docker: Develop faster. Run anywhere.},
  url = {https://www.docker.com/},
  urldate = {2023-7-23}
}




@article{data_privacy,
author = {Mettu, G.R. and Patil, D.A.},
year = {2018},
month = {01},
pages = {19-27},
title = {Data breaches as top security concern in cloud computing},
volume = {119},
journal = {International Journal of Pure and Applied Mathematics}
}


@inproceedings{eu_data_Privacy,
author = {Duncan, Bob},
year = {2018},
month = {02},
pages = {},
title = {Can EU General Data Protection Regulation Compliance be Achieved When Using Cloud Computing?}
}



@ONLINE{rust_automic_u64,
  title = {Rust: Module std::sync::atomic},
  url = {https://doc.rust-lang.org/stable/std/sync/atomic/index.html},
  urldate = {2023-7-23}
}



@ONLINE{oci_Lifecycle,
  title = {Container Lifecycle Figure},
  url = {https://www.alibabacloud.com/blog/open-container-initiative-oci-specifications_594397},
  urldate = {2023-7-23}
}


@ONLINE{io_uring,
  title = {Linux Programmer's Manual, io uring},
  url = {https://man.archlinux.org/man/io_uring.7.en},
  urldate = {2023-7-23}
}

@ONLINE{tiny_linux,
  title = {http://tinycorelinux.net/},
  url = {http://tinycorelinux.net/},
  urldate = {2023-7-23}
}


@ONLINE{kata_storage,
  title = {Kata Containers storage: Architecture, problem statement and future},
  url = {https://gist.github.com/sameo/a878c5f44d7f274a68128fb4ba65d22e},
  urldate = {2023-7-23}
}


@ONLINE{quark_conf_file,
  title = {Quark Containers configuration file},
  url = {https://github.com/QuarkContainer/Quark/blob/main/config.json#L2},
  urldate = {2023-7-23}
}


@ONLINE{cri_plugin_arch,
  title = {Architecture of The CRI Plugin},
  url = {https://github.com/containerd/containerd/blob/main/docs/cri/architecture.md},
  urldate = {2023-7-23}
}


@ONLINE{start_container_hooks,
  title = {StartContainer Hooks},
  url = {https://github.com/opencontainers/runtime-spec/blob/main/config.md#startContainer-hooks},
  urldate = {2023-7-23}
}











